{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iProg\\\\Documents\\\\New folder\\\\nfl_prediction_system\\\\frontend\\\\src\\\\components\\\\PredictionResult.js\";\nimport React from 'react';\n\n/**\n * Component for displaying prediction results.\n *\n * Receives a `result` prop which contains the neural network, gradient\n * boosting and ensemble probabilities. Displays them in a clean card.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PredictionResult({\n  result\n}) {\n  const {\n    neural_network_proba,\n    gradient_boosting_proba,\n    ensemble_proba\n  } = result;\n  const toPercent = p => (p * 100).toFixed(1) + '%';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prediction Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Neural Network:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this), \" \", toPercent(neural_network_proba)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gradient Boosting:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 10\n      }, this), \" \", toPercent(gradient_boosting_proba)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ensemble (Final):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 10\n      }, this), \" \", toPercent(ensemble_proba)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = PredictionResult;\nexport default PredictionResult;\nvar _c;\n$RefreshReg$(_c, \"PredictionResult\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PredictionResult","result","neural_network_proba","gradient_boosting_proba","ensemble_proba","toPercent","p","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/iProg/Documents/New folder/nfl_prediction_system/frontend/src/components/PredictionResult.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Component for displaying prediction results.\n *\n * Receives a `result` prop which contains the neural network, gradient\n * boosting and ensemble probabilities. Displays them in a clean card.\n */\nfunction PredictionResult({ result }) {\n  const { neural_network_proba, gradient_boosting_proba, ensemble_proba } = result;\n  const toPercent = (p) => (p * 100).toFixed(1) + '%';\n  return (\n    <div className=\"result-card\">\n      <h2>Prediction Result</h2>\n      <p><strong>Neural Network:</strong> {toPercent(neural_network_proba)}</p>\n      <p><strong>Gradient Boosting:</strong> {toPercent(gradient_boosting_proba)}</p>\n      <p><strong>Ensemble (Final):</strong> {toPercent(ensemble_proba)}</p>\n    </div>\n  );\n}\n\nexport default PredictionResult;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,gBAAgBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACpC,MAAM;IAAEC,oBAAoB;IAAEC,uBAAuB;IAAEC;EAAe,CAAC,GAAGH,MAAM;EAChF,MAAMI,SAAS,GAAIC,CAAC,IAAK,CAACA,CAAC,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;EACnD,oBACER,OAAA;IAAKS,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BV,OAAA;MAAAU,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAAQ;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACR,SAAS,CAACH,oBAAoB,CAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzEd,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAAQ;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACR,SAAS,CAACF,uBAAuB,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Ed,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAAQ;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACR,SAAS,CAACD,cAAc,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV;AAACC,EAAA,GAXQd,gBAAgB;AAazB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}