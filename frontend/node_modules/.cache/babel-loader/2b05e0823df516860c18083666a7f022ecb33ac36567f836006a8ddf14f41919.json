{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iProg\\\\OneDrive\\\\Documents\\\\Football_predict\\\\nfl_prediction_system\\\\nfl_prediction_system\\\\frontend\\\\src\\\\components\\\\TeamGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getNextWeekSchedule, predictGame } from '../api/client.js';\nimport './TeamGrid.css';\n\n/**\r\n * TeamGrid Component - Displays NFL matchups for next week with prediction capabilities\r\n *\r\n * Features:\r\n * - Loads team metadata from CSV\r\n * - Fetches next week's schedule from API\r\n * - Displays matchup cards with team logos and kickoff times\r\n * - Handles prediction requests on card clicks\r\n * - Shows loading states and prediction results\r\n * - Responsive grid layout with accessibility features\r\n *\r\n * @component\r\n * @param {object} props - Component props\r\n * @param {Function} props.onPrediction - Callback when prediction is made\r\n * @returns {JSX.Element} TeamGrid component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeamGrid({\n  onPrediction\n}) {\n  _s();\n  const [teams, setTeams] = useState({});\n  const [schedule, setSchedule] = useState([]);\n  const [predictions, setPredictions] = useState({});\n  const [loading, setLoading] = useState({});\n  const [error, setError] = useState(null);\n\n  /**\r\n   * Load team metadata from CSV file\r\n   * Parses team descriptions and creates lookup table by abbreviation\r\n   */\n  useEffect(() => {\n    const loadTeams = async () => {\n      try {\n        const response = await fetch('/data/myteamdescriptions.csv');\n        if (!response.ok) {\n          throw new Error('Failed to load team data');\n        }\n        const csvText = await response.text();\n        const lines = csvText.trim().split('\\n');\n        const headers = lines[0].split(',').map(h => h.trim());\n        const teamData = {};\n        for (let i = 1; i < lines.length; i++) {\n          const values = lines[i].split(',').map(v => v.trim());\n          if (values.length >= 3) {\n            const [teamName, abbr, logoUrl] = values;\n            teamData[abbr] = {\n              name: teamName,\n              abbr,\n              logoUrl\n            };\n          }\n        }\n        setTeams(teamData);\n      } catch (err) {\n        console.error('[TeamGrid] Failed to load teams:', err);\n        setError('Failed to load team data');\n      }\n    };\n    loadTeams();\n  }, []);\n\n  /**\r\n   * Load next week's schedule from API\r\n   */\n  useEffect(() => {\n    const loadSchedule = async () => {\n      try {\n        const scheduleData = await getNextWeekSchedule();\n        setSchedule(scheduleData);\n      } catch (err) {\n        console.error('[TeamGrid] Failed to load schedule:', err);\n        setError('Failed to load schedule');\n      }\n    };\n    if (Object.keys(teams).length > 0) {\n      loadSchedule();\n    }\n  }, [teams]);\n\n  /**\r\n   * Handle prediction request for a matchup\r\n   * @param {object} game - Game object with season, week, home_abbr, away_abbr\r\n   */\n  const handlePredict = async game => {\n    const gameKey = `${game.home_abbr}-${game.away_abbr}`;\n\n    // Don't make duplicate requests\n    if (loading[gameKey] || predictions[gameKey]) {\n      return;\n    }\n    setLoading(prev => ({\n      ...prev,\n      [gameKey]: true\n    }));\n    setError(null);\n    try {\n      const result = await predictGame({\n        home_team: game.home_abbr,\n        away_team: game.away_abbr,\n        season: game.season,\n        week: game.week\n      });\n      setPredictions(prev => ({\n        ...prev,\n        [gameKey]: result\n      }));\n\n      // Notify parent component\n      if (onPrediction) {\n        onPrediction(game, result);\n      }\n    } catch (err) {\n      console.error('[TeamGrid] Prediction failed:', err);\n      setError(`Failed to predict ${game.home_abbr} vs ${game.away_abbr}`);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        [gameKey]: false\n      }));\n    }\n  };\n\n  /**\r\n   * Format kickoff time to local timezone (America/Los_Angeles)\r\n   * @param {string} isoString - ISO timestamp string\r\n   * @returns {string} Formatted local time\r\n   */\n  const formatKickoffTime = isoString => {\n    try {\n      const date = new Date(isoString);\n      return date.toLocaleString('en-US', {\n        timeZone: 'America/Los_Angeles',\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      });\n    } catch (err) {\n      console.warn('[TeamGrid] Failed to format time:', err);\n      return isoString;\n    }\n  };\n\n  /**\r\n   * Render team logo and name\r\n   * @param {string} abbr - Team abbreviation\r\n   * @param {boolean} isHome - Whether this is the home team\r\n   * @returns {JSX.Element} Team display element\r\n   */\n  const renderTeam = (abbr, isHome) => {\n    const team = teams[abbr];\n    if (!team) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-logo-placeholder\",\n          children: abbr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"team-name\",\n          children: abbr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: team.logoUrl,\n        alt: `${team.name} logo`,\n        className: \"team-logo\",\n        onError: e => {\n          e.target.style.display = 'none';\n          e.target.nextSibling.style.display = 'block';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-logo-placeholder\",\n        style: {\n          display: 'none'\n        },\n        children: team.abbr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"team-name\",\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"team-abbr\",\n          children: team.abbr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), isHome && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"home-indicator\",\n          children: \"(Home)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-grid-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  if (schedule.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-grid-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading next week's matchups...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-grid-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Next Week's NFL Matchups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click any matchup to see predicted scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchups-grid\",\n      children: schedule.map((game, index) => {\n        const gameKey = `${game.home_abbr}-${game.away_abbr}`;\n        const prediction = predictions[gameKey];\n        const isLoading = loading[gameKey];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `matchup-card ${prediction ? 'has-prediction' : ''} ${isLoading ? 'loading' : ''}`,\n          onClick: () => handlePredict(game),\n          onKeyDown: e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              e.preventDefault();\n              handlePredict(game);\n            }\n          },\n          tabIndex: 0,\n          role: \"button\",\n          \"aria-label\": `Predict ${game.away_abbr} at ${game.home_abbr}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"matchup-teams\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"away-team\",\n              children: renderTeam(game.away_abbr, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vs-indicator\",\n              children: \"@\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-team\",\n              children: renderTeam(game.home_abbr, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"matchup-time\",\n            children: formatKickoffTime(game.kickoff_iso)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-loading\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Predicting...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"predicted-scores\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"score home-score\",\n                children: prediction.home_score.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"score-separator\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"score away-score\",\n                children: prediction.away_score.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"point-diff\",\n              children: [\"Spread: \", prediction.point_diff > 0 ? '+' : '', prediction.point_diff.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this)]\n        }, `${game.season}-${game.week}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamGrid, \"KbmDT8Ggv9NH05d4lOmpwvcfAb0=\");\n_c = TeamGrid;\nTeamGrid.propTypes = {\n  onPrediction: PropTypes.func\n};\nexport default TeamGrid;\nvar _c;\n$RefreshReg$(_c, \"TeamGrid\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","getNextWeekSchedule","predictGame","jsxDEV","_jsxDEV","TeamGrid","onPrediction","_s","teams","setTeams","schedule","setSchedule","predictions","setPredictions","loading","setLoading","error","setError","loadTeams","response","fetch","ok","Error","csvText","text","lines","trim","split","headers","map","h","teamData","i","length","values","v","teamName","abbr","logoUrl","name","err","console","loadSchedule","scheduleData","Object","keys","handlePredict","game","gameKey","home_abbr","away_abbr","prev","result","home_team","away_team","season","week","formatKickoffTime","isoString","date","Date","toLocaleString","timeZone","weekday","month","day","hour","minute","hour12","warn","renderTeam","isHome","team","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onError","e","target","style","display","nextSibling","onClick","window","location","reload","index","prediction","isLoading","onKeyDown","key","preventDefault","tabIndex","role","kickoff_iso","home_score","toFixed","away_score","point_diff","_c","propTypes","func","$RefreshReg$"],"sources":["C:/Users/iProg/OneDrive/Documents/Football_predict/nfl_prediction_system/nfl_prediction_system/frontend/src/components/TeamGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getNextWeekSchedule, predictGame } from '../api/client.js';\r\nimport './TeamGrid.css';\r\n\r\n/**\r\n * TeamGrid Component - Displays NFL matchups for next week with prediction capabilities\r\n *\r\n * Features:\r\n * - Loads team metadata from CSV\r\n * - Fetches next week's schedule from API\r\n * - Displays matchup cards with team logos and kickoff times\r\n * - Handles prediction requests on card clicks\r\n * - Shows loading states and prediction results\r\n * - Responsive grid layout with accessibility features\r\n *\r\n * @component\r\n * @param {object} props - Component props\r\n * @param {Function} props.onPrediction - Callback when prediction is made\r\n * @returns {JSX.Element} TeamGrid component\r\n */\r\nfunction TeamGrid({ onPrediction }) {\r\n  const [teams, setTeams] = useState({});\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [predictions, setPredictions] = useState({});\r\n  const [loading, setLoading] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  /**\r\n   * Load team metadata from CSV file\r\n   * Parses team descriptions and creates lookup table by abbreviation\r\n   */\r\n  useEffect(() => {\r\n    const loadTeams = async () => {\r\n      try {\r\n        const response = await fetch('/data/myteamdescriptions.csv');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to load team data');\r\n        }\r\n\r\n        const csvText = await response.text();\r\n        const lines = csvText.trim().split('\\n');\r\n        const headers = lines[0].split(',').map(h => h.trim());\r\n\r\n        const teamData = {};\r\n        for (let i = 1; i < lines.length; i++) {\r\n          const values = lines[i].split(',').map(v => v.trim());\r\n          if (values.length >= 3) {\r\n            const [teamName, abbr, logoUrl] = values;\r\n            teamData[abbr] = {\r\n              name: teamName,\r\n              abbr,\r\n              logoUrl,\r\n            };\r\n          }\r\n        }\r\n\r\n        setTeams(teamData);\r\n      } catch (err) {\r\n        console.error('[TeamGrid] Failed to load teams:', err);\r\n        setError('Failed to load team data');\r\n      }\r\n    };\r\n\r\n    loadTeams();\r\n  }, []);\r\n\r\n  /**\r\n   * Load next week's schedule from API\r\n   */\r\n  useEffect(() => {\r\n    const loadSchedule = async () => {\r\n      try {\r\n        const scheduleData = await getNextWeekSchedule();\r\n        setSchedule(scheduleData);\r\n      } catch (err) {\r\n        console.error('[TeamGrid] Failed to load schedule:', err);\r\n        setError('Failed to load schedule');\r\n      }\r\n    };\r\n\r\n    if (Object.keys(teams).length > 0) {\r\n      loadSchedule();\r\n    }\r\n  }, [teams]);\r\n\r\n  /**\r\n   * Handle prediction request for a matchup\r\n   * @param {object} game - Game object with season, week, home_abbr, away_abbr\r\n   */\r\n  const handlePredict = async (game) => {\r\n    const gameKey = `${game.home_abbr}-${game.away_abbr}`;\r\n\r\n    // Don't make duplicate requests\r\n    if (loading[gameKey] || predictions[gameKey]) {\r\n      return;\r\n    }\r\n\r\n    setLoading(prev => ({ ...prev, [gameKey]: true }));\r\n    setError(null);\r\n\r\n    try {\r\n      const result = await predictGame({\r\n        home_team: game.home_abbr,\r\n        away_team: game.away_abbr,\r\n        season: game.season,\r\n        week: game.week,\r\n      });\r\n\r\n      setPredictions(prev => ({ ...prev, [gameKey]: result }));\r\n\r\n      // Notify parent component\r\n      if (onPrediction) {\r\n        onPrediction(game, result);\r\n      }\r\n    } catch (err) {\r\n      console.error('[TeamGrid] Prediction failed:', err);\r\n      setError(`Failed to predict ${game.home_abbr} vs ${game.away_abbr}`);\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, [gameKey]: false }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Format kickoff time to local timezone (America/Los_Angeles)\r\n   * @param {string} isoString - ISO timestamp string\r\n   * @returns {string} Formatted local time\r\n   */\r\n  const formatKickoffTime = (isoString) => {\r\n    try {\r\n      const date = new Date(isoString);\r\n      return date.toLocaleString('en-US', {\r\n        timeZone: 'America/Los_Angeles',\r\n        weekday: 'short',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: '2-digit',\r\n        hour12: true,\r\n      });\r\n    } catch (err) {\r\n      console.warn('[TeamGrid] Failed to format time:', err);\r\n      return isoString;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render team logo and name\r\n   * @param {string} abbr - Team abbreviation\r\n   * @param {boolean} isHome - Whether this is the home team\r\n   * @returns {JSX.Element} Team display element\r\n   */\r\n  const renderTeam = (abbr, isHome) => {\r\n    const team = teams[abbr];\r\n    if (!team) {\r\n      return (\r\n        <div className=\"team-placeholder\">\r\n          <div className=\"team-logo-placeholder\">{abbr}</div>\r\n          <span className=\"team-name\">{abbr}</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"team\">\r\n        <img\r\n          src={team.logoUrl}\r\n          alt={`${team.name} logo`}\r\n          className=\"team-logo\"\r\n          onError={(e) => {\r\n            e.target.style.display = 'none';\r\n            e.target.nextSibling.style.display = 'block';\r\n          }}\r\n        />\r\n        <div className=\"team-logo-placeholder\" style={{ display: 'none' }}>\r\n          {team.abbr}\r\n        </div>\r\n        <div className=\"team-info\">\r\n          <span className=\"team-name\">{team.name}</span>\r\n          <span className=\"team-abbr\">{team.abbr}</span>\r\n          {isHome && <span className=\"home-indicator\">(Home)</span>}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"team-grid-error\">\r\n        <h3>Error Loading Data</h3>\r\n        <p>{error}</p>\r\n        <button onClick={() => window.location.reload()}>\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (schedule.length === 0) {\r\n    return (\r\n      <div className=\"team-grid-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading next week's matchups...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"team-grid\">\r\n      <div className=\"team-grid-header\">\r\n        <h2>Next Week's NFL Matchups</h2>\r\n        <p>Click any matchup to see predicted scores</p>\r\n      </div>\r\n\r\n      <div className=\"matchups-grid\">\r\n        {schedule.map((game, index) => {\r\n          const gameKey = `${game.home_abbr}-${game.away_abbr}`;\r\n          const prediction = predictions[gameKey];\r\n          const isLoading = loading[gameKey];\r\n\r\n          return (\r\n            <div\r\n              key={`${game.season}-${game.week}-${index}`}\r\n              className={`matchup-card ${prediction ? 'has-prediction' : ''} ${isLoading ? 'loading' : ''}`}\r\n              onClick={() => handlePredict(game)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  e.preventDefault();\r\n                  handlePredict(game);\r\n                }\r\n              }}\r\n              tabIndex={0}\r\n              role=\"button\"\r\n              aria-label={`Predict ${game.away_abbr} at ${game.home_abbr}`}\r\n            >\r\n              <div className=\"matchup-teams\">\r\n                <div className=\"away-team\">\r\n                  {renderTeam(game.away_abbr, false)}\r\n                </div>\r\n                <div className=\"vs-indicator\">@</div>\r\n                <div className=\"home-team\">\r\n                  {renderTeam(game.home_abbr, true)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"matchup-time\">\r\n                {formatKickoffTime(game.kickoff_iso)}\r\n              </div>\r\n\r\n              {isLoading && (\r\n                <div className=\"prediction-loading\">\r\n                  <div className=\"loading-spinner small\"></div>\r\n                  <span>Predicting...</span>\r\n                </div>\r\n              )}\r\n\r\n              {prediction && (\r\n                <div className=\"prediction-result\">\r\n                  <div className=\"predicted-scores\">\r\n                    <span className=\"score home-score\">{prediction.home_score.toFixed(1)}</span>\r\n                    <span className=\"score-separator\">-</span>\r\n                    <span className=\"score away-score\">{prediction.away_score.toFixed(1)}</span>\r\n                  </div>\r\n                  <div className=\"point-diff\">\r\n                    Spread: {prediction.point_diff > 0 ? '+' : ''}{prediction.point_diff.toFixed(1)}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTeamGrid.propTypes = {\r\n  onPrediction: PropTypes.func,\r\n};\r\n\r\nexport default TeamGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}